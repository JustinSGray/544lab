import numpy as np
import matplotlib.pylab as plt

cplx = complex


def r1(a, xa, ra, mu, e, omega, u):
    val = ((-0.5*u*(ra**2 - 1.*e*xa))/(mu*(ra**2 - 1.*xa**2)) - 
       0.5*np.sqrt((u**2*(ra**2 - 1.*e*xa)**2 + mu*(mu*(0.3333333333333333 + 0.3333333333333333*omega**2)*ra**2 + 
               u**2*(-0.6666666666666666*e - 0.6666666666666666*xa))*(ra**2 - 1.*xa**2) + 
            mu*(ra**2 - 1.*xa**2)*(mu*(-1. - 1.*omega**2)*ra**2 + u**2*(2.*e + 2.*xa)) + 
            (mu*(ra**2 - 1.*xa**2)*(e*u**4*(20.15873679831797*ra**2 - 20.15873679831797*e*xa) + 
                 mu**3*((0.41997368329829105 + 5.879631566176075*omega**2 + 0.41997368329829105*omega**4)*ra**4 - 
                    5.039684199579493*omega**2*ra**2*xa**2) + 
                 mu*u**2*(-5.039684199579493*ra**4 + 5.039684199579493*e*ra**2*xa + 
                    u**2*(1.6798947331931642*e**2 + 3.3597894663863284*e*xa + 1.6798947331931642*xa**2)) + 
                 mu**2*u**2*((-1.6798947331931642 - 1.6798947331931642*omega**2)*ra**2*xa + 
                    e*((-1.6798947331931642 - 11.75926313235215*omega**2)*ra**2 + 10.079368399158986*omega**2*xa**2))))/
             (2.*mu**3*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                36.*mu**2*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                108.*mu**3*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                108.*mu**2*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                72.*mu**4*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2) + 
                np.sqrt(mu**3*(-4.*(mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**2 - 12.*u*(mu*ra**2*u - 4.*e*u**3)*(ra**2 - 1.*e*xa) + 
                        12.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*xa**2))**3 + 
                    mu*(2.*mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                        36.*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                        108.*mu*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                        108.*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                        72.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2))**2)))**
              0.3333333333333333 + 0.26456684199469993*(ra**2 - 1.*xa**2)*
             (2.*mu**3*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                36.*mu**2*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                108.*mu**3*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                108.*mu**2*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                72.*mu**4*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2) + 
                np.sqrt(mu**3*(-4.*(mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**2 - 12.*u*(mu*ra**2*u - 4.*e*u**3)*(ra**2 - 1.*e*xa) + 
                        12.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*xa**2))**3 + 
                    mu*(2.*mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                        36.*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                        108.*mu*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                        108.*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                        72.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2))**2)))**
              0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2)**2)) - 
       0.5*np.sqrt((2.*mu*u**2*(ra**2 - 1.*e*xa)**2*(ra**2 - 1.*xa**2) + 
            mu**2*(mu*(-0.3333333333333333 - 0.3333333333333333*omega**2)*ra**2 + u**2*(0.6666666666666666*e + 0.6666666666666666*xa))*
             (ra**2 - 1.*xa**2)**2 + mu**2*(ra**2 - 1.*xa**2)**2*(mu*(-1. - 1.*omega**2)*ra**2 + u**2*(2.*e + 2.*xa)) + 
            (mu**2*(ra**2 - 1.*xa**2)**2*(e*u**4*(-20.15873679831797*ra**2 + 20.15873679831797*e*xa) + 
                 mu**3*((-0.41997368329829105 - 5.879631566176075*omega**2 - 0.41997368329829105*omega**4)*ra**4 + 
                    5.039684199579493*omega**2*ra**2*xa**2) + 
                 mu*u**2*(5.039684199579493*ra**4 - 5.039684199579493*e*ra**2*xa + 
                    u**2*(-1.6798947331931642*e**2 - 3.3597894663863284*e*xa - 1.6798947331931642*xa**2)) + 
                 mu**2*u**2*((1.6798947331931642 + 1.6798947331931642*omega**2)*ra**2*xa + 
                    e*((1.6798947331931642 + 11.75926313235215*omega**2)*ra**2 - 10.079368399158986*omega**2*xa**2))))/
             (2.*mu**3*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                36.*mu**2*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                108.*mu**3*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                108.*mu**2*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                72.*mu**4*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2) + 
                np.sqrt(mu**3*(-4.*(mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**2 - 12.*u*(mu*ra**2*u - 4.*e*u**3)*(ra**2 - 1.*e*xa) + 
                        12.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*xa**2))**3 + 
                    mu*(2.*mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                        36.*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                        108.*mu*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                        108.*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                        72.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2))**2)))**
              0.3333333333333333 - 0.26456684199469993*mu*(ra**2 - 1.*xa**2)**2*
             (2.*mu**3*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                36.*mu**2*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                108.*mu**3*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                108.*mu**2*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                72.*mu**4*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2) + 
                np.sqrt(mu**3*(-4.*(mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**2 - 12.*u*(mu*ra**2*u - 4.*e*u**3)*(ra**2 - 1.*e*xa) + 
                        12.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*xa**2))**3 + 
                    mu*(2.*mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                        36.*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                        108.*mu*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                        108.*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                        72.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2))**2)))**
              0.3333333333333333 + (u*(u**2*(2.*ra**6 - 6.*e*ra**4*xa + 6.*e**2*ra**2*xa**2 - 2.*e**3*xa**3) + 
                 mu**2*ra**2*((2. - 2.*omega**2)*ra**4 + xa**3*(-2.*e - 2.*e*omega**2 + 4.*xa) + 
                    ra**2*xa*(2.*e + 2.*e*omega**2 - 6.*xa + 2.*omega**2*xa)) + 
                 mu*u**2*(4.*ra**4*xa - 4.*ra**2*xa**3 + e**2*(-4.*ra**2*xa + 4.*xa**3) + e*(-12.*ra**4 + 24.*ra**2*xa**2 - 12.*xa**4))))/
             np.sqrt((u**2*(ra**2 - 1.*e*xa)**2 + mu*(mu*(0.3333333333333333 + 0.3333333333333333*omega**2)*ra**2 + 
                    u**2*(-0.6666666666666666*e - 0.6666666666666666*xa))*(ra**2 - 1.*xa**2) + 
                 mu*(ra**2 - 1.*xa**2)*(mu*(-1. - 1.*omega**2)*ra**2 + u**2*(2.*e + 2.*xa)) + 
                 (mu*(ra**2 - 1.*xa**2)*(e*u**4*(20.15873679831797*ra**2 - 20.15873679831797*e*xa) + 
                      mu**3*((0.41997368329829105 + 5.879631566176075*omega**2 + 0.41997368329829105*omega**4)*ra**4 - 
                         5.039684199579493*omega**2*ra**2*xa**2) + 
                      mu*u**2*(-5.039684199579493*ra**4 + 5.039684199579493*e*ra**2*xa + 
                         u**2*(1.6798947331931642*e**2 + 3.3597894663863284*e*xa + 1.6798947331931642*xa**2)) + 
                      mu**2*u**2*((-1.6798947331931642 - 1.6798947331931642*omega**2)*ra**2*xa + 
                         e*((-1.6798947331931642 - 11.75926313235215*omega**2)*ra**2 + 10.079368399158986*omega**2*xa**2))))/
                  (2.*mu**3*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                     36.*mu**2*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                     108.*mu**3*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                     108.*mu**2*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                     72.*mu**4*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2) + 
                     np.sqrt(mu**3*(-4.*(mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**2 - 
                             12.*u*(mu*ra**2*u - 4.*e*u**3)*(ra**2 - 1.*e*xa) + 12.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*xa**2))\
                            **3 + mu*(2.*mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                             36.*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                             108.*mu*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                             108.*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                             72.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2))**2
                         )))**0.3333333333333333 + 0.26456684199469993*(ra**2 - 1.*xa**2)*
                  (2.*mu**3*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                     36.*mu**2*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                     108.*mu**3*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                     108.*mu**2*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                     72.*mu**4*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2) + 
                     np.sqrt(mu**3*(-4.*(mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**2 - 
                             12.*u*(mu*ra**2*u - 4.*e*u**3)*(ra**2 - 1.*e*xa) + 12.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*xa**2))\
                            **3 + mu*(2.*mu*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))**3 - 
                             36.*u*(mu*ra**2*u - 4.*e*u**3)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*e*xa) + 
                             108.*mu*omega**2*u**2*(mu*ra**2 - 2.*e*u**2)*(ra**2 - 1.*e*xa)**2 + 
                             108.*(mu*ra**2*u - 4.*e*u**3)**2*(ra**2 - 1.*xa**2) - 
                             72.*mu**2*omega**2*(mu*ra**2 - 2.*e*u**2)*(mu*(1 + omega**2)*ra**2 + u**2*(-2.*e - 2.*xa))*(ra**2 - 1.*xa**2))**2
                         )))**0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2)**2)))/(mu**3*(ra**2 - 1.*xa**2)**3)))
    return val 


def r2(a, xa, ra, mu, e, omega, u):
    val = ((-0.5*(ra**2*u - 1.*e*u*xa))/(mu*(ra**2 - 1.*xa**2)) - 
       0.5*np.sqrt((ra**2*u - 1.*e*u*xa)**2/(mu**2*(ra**2 - 1.*xa**2)**2) - 
          (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) + 
          (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) + 
          (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
               (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
               12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
           (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                 (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                 (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                   (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                      (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                      12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                  (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                     36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                      (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                     2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                     108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                     72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                      (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333) + 
          (0.26456684199469993*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                 (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                 (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                   (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                      (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                      12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                  (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                     36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                      (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                     2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                     108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                     72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                      (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2))) + 
       0.5*np.sqrt((2.*(ra**2*u - 1.*e*u*xa)**2)/(mu**2*(ra**2 - 1.*xa**2)**2) - 
          (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) - 
          (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) - 
          (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
               (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
               12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
           (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                 (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                 (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                   (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                      (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                      12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                  (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                     36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                      (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                     2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                     108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                     72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                      (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333) - 
          (0.26456684199469993*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                 (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                 (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                   (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                      (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                      12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                  (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                     36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                      (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                     2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                     108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                     72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                      (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2)) - 
          (0.25*((-8.*(ra**2*u - 1.*e*u*xa)**3)/(mu**3*(ra**2 - 1.*xa**2)**3) + 
               (8.*(ra**2*u - 1.*e*u*xa)*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu**2*(ra**2 - 1.*xa**2)**2) - 
               (16.*(mu*ra**2*u - 4.*e*u**3))/(mu**2*(ra**2 - 1.*xa**2))))/
           np.sqrt((ra**2*u - 1.*e*u*xa)**2/(mu**2*(ra**2 - 1.*xa**2)**2) - 
             (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) + 
             (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) + 
             (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                  (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                  12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
              (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                   36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                    (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                   2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                   108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                   72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                    (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                      (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                         (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                         12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                     (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                        36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                         (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                        2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                        108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                        72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*
                         (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*(mu**2*ra**2 - 1.*mu**2*xa**2))**2))**
                 0.3333333333333333) + (0.26456684199469993*
                (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                   36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                    (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                   2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                   108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                   72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                    (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                      (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                         (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                         12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                     (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                        36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                         (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                        2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                        108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                        72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*
                         (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*(mu**2*ra**2 - 1.*mu**2*xa**2))**2))**
                 0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2)))))
    return val 


def r3(a, xa, ra, mu, e, omega, u):
    val = ((-0.5*(ra**2*u - 1.*e*u*xa))/(mu*(ra**2 - 1.*xa**2)) + 
        0.5*np.sqrt((ra**2*u - 1.*e*u*xa)**2/(mu**2*(ra**2 - 1.*xa**2)**2) - 
           (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) + 
           (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) + 
           (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
            (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                 36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                  (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                 2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                 108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                 72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                  (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                    (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                       (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                       12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                   (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                      36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                       (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                      2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                      108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                      72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                       (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333) + 
           (0.26456684199469993*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                 36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                  (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                 2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                 108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                 72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                  (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                    (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                       (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                       12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                   (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                      36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                       (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                      2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                      108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                      72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                       (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2))) - 
        0.5*np.sqrt((2.*(ra**2*u - 1.*e*u*xa)**2)/(mu**2*(ra**2 - 1.*xa**2)**2) - 
           (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) - 
           (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) - 
           (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
            (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                 36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                  (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                 2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                 108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                 72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                  (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                    (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                       (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                       12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                   (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                      36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                       (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                      2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                      108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                      72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                       (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333) - 
           (0.26456684199469993*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                 36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                  (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                 2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                 108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                 72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                  (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                    (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                       (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                       12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                   (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                      36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                       (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                      2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                      108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                      72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                       (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2)) + 
           (0.25*((-8.*(ra**2*u - 1.*e*u*xa)**3)/(mu**3*(ra**2 - 1.*xa**2)**3) + 
                (8.*(ra**2*u - 1.*e*u*xa)*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu**2*(ra**2 - 1.*xa**2)**2) - 
                (16.*(mu*ra**2*u - 4.*e*u**3))/(mu**2*(ra**2 - 1.*xa**2))))/
            np.sqrt((ra**2*u - 1.*e*u*xa)**2/(mu**2*(ra**2 - 1.*xa**2)**2) - 
              (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) + 
              (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) + 
              (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                   (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                   12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
               (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                    36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                    2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                    108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                    72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                     (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                       (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                          (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                          12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                      (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                         36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                          (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                         2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                         108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                         72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*
                          (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*(mu**2*ra**2 - 1.*mu**2*xa**2))**2))**
                  0.3333333333333333) + (0.26456684199469993*
                 (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                    36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                    2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                    108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                    72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                     (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                       (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                          (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                          12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                      (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                         36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                          (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                         2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                         108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                         72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*
                          (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*(mu**2*ra**2 - 1.*mu**2*xa**2))**2))**
                  0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2)))))
    return val 


def r4(a, xa, ra, mu, e, omega, u):
    val = ((-0.5*(ra**2*u - 1.*e*u*xa))/(mu*(ra**2 - 1.*xa**2)) + 
      0.5*np.sqrt((ra**2*u - 1.*e*u*xa)**2/(mu**2*(ra**2 - 1.*xa**2)**2) - 
         (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) + 
         (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) + 
         (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
              (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
              12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
          (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
               36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
               2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
               108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
               72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                  (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                     12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                 (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                    36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                    2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                    108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                    72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                     (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333) + 
         (0.26456684199469993*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
               36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
               2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
               108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
               72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                  (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                     12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                 (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                    36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                    2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                    108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                    72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                     (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2))) + 
      0.5*np.sqrt((2.*(ra**2*u - 1.*e*u*xa)**2)/(mu**2*(ra**2 - 1.*xa**2)**2) - 
         (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) - 
         (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) - 
         (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
              (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
              12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
          (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
               36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
               2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
               108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
               72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                  (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                     12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                 (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                    36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                    2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                    108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                    72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                     (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333) - 
         (0.26456684199469993*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
               36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
               2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
               108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
               72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                  (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                     12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                 (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                    36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                     (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                    2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                    108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                    72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                     (mu**2*ra**2 - 1.*mu**2*xa**2))**2))**0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2)) + 
         (0.25*((-8.*(ra**2*u - 1.*e*u*xa)**3)/(mu**3*(ra**2 - 1.*xa**2)**3) + 
              (8.*(ra**2*u - 1.*e*u*xa)*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu**2*(ra**2 - 1.*xa**2)**2) - 
              (16.*(mu*ra**2*u - 4.*e*u**3))/(mu**2*(ra**2 - 1.*xa**2))))/
          np.sqrt((ra**2*u - 1.*e*u*xa)**2/(mu**2*(ra**2 - 1.*xa**2)**2) - 
            (1.*(mu*ra**2 + mu*omega**2*ra**2 - 2.*e*u**2 - 2.*u**2*xa))/(mu*(ra**2 - 1.*xa**2)) + 
            (0.3333333333333333*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa))/(mu**2*ra**2 - 1.*mu**2*xa**2) + 
            (0.41997368329829105*(-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                 (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                 12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2)))/
             (mu**2*(ra**2 - 1.*xa**2)*(108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                  36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                   (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                  2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                  108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                  72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                   (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                     (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                        (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                        12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                    (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                       36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                        (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                       2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                       108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                       72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*
                        (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*(mu**2*ra**2 - 1.*mu**2*xa**2))**2))**
                0.3333333333333333) + (0.26456684199469993*
               (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                  36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                   (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                  2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                  108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                  72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*
                   (mu**2*ra**2 - 1.*mu**2*xa**2) + np.sqrt(-4.*
                     (-12.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa) + 
                        (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**2 + 
                        12.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu**2*ra**2 - 1.*mu**2*xa**2))**3 + 
                    (108.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*(mu*ra**2*u - 1.*e*mu*u*xa)**2 - 
                       36.*(mu*ra**2*u - 4.*e*u**3)*(mu*ra**2*u - 1.*e*mu*u*xa)*
                        (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa) + 
                       2.*(mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)**3 + 
                       108.*(mu*ra**2*u - 4.*e*u**3)**2*(mu**2*ra**2 - 1.*mu**2*xa**2) - 
                       72.*(mu**2*omega**2*ra**2 - 2.*e*mu*omega**2*u**2)*
                        (mu**2*ra**2 + mu**2*omega**2*ra**2 - 2.*e*mu*u**2 - 2.*mu*u**2*xa)*(mu**2*ra**2 - 1.*mu**2*xa**2))**2))**
                0.3333333333333333)/(mu**2*(ra**2 - 1.*xa**2)))))
    return val 


def compute_flutter(omega, plot=True): 
    a = -.3
    xa = .2 
    ra = .3 
    mu = 10 
    e = .2 

    a = -.3
    xa = .2 
    ra = .3 
    mu = 10 
    e = .2 

    U = np.linspace(1e-4,2.0,1000, dtype="complex")
    data1 = r1(a, xa, ra, mu, e, omega, U)
    data2 = r2(a, xa, ra, mu, e, omega, U)
    data3 = r3(a, xa, ra, mu, e, omega, U)
    data4 = r4(a, xa, ra, mu, e, omega, U)

    f1 = data1.real[4:] > 1e-4
    if np.any(f1): 
        f1 = np.argmax(f1)
    else: 
        f1 = len(U)-1

    f2 = data2.real[4:] > 1e-4
    if np.any(f2): 
        f2 = np.argmax(f2)
    else: 
        f2 = len(U)-1

    f3 = data3.real[4:] > 1e-4
    if np.any(f3): 
        f3 = np.argmax(f3)
    else: 
        f3 = len(U)-1

    f4 = data4.real[4:] > 1e-4
    if np.any(f4): 
        f4 = np.argmax(f4)
    else: 
        f4 = len(U)-1
    
    idxs = np.array([f1, f2, f3, f4]) 
    f_idx = np.min(idxs)
    mode_idx = np.argmin(idxs)
    
    flutter_speed = U.real[f_idx]
    if mode_idx == 0: 
        flutter_freq = data1.imag[f_idx]
    if mode_idx == 1: 
        flutter_freq = data2.imag[f_idx]
    if mode_idx == 2: 
        flutter_freq = data3.imag[f_idx]
    if mode_idx == 3: 
        flutter_freq = data4.imag[f_idx]  

    flutter_freq = np.abs(flutter_freq)
    print "flutter freq: ", flutter_freq
    print "flutter speed: ", flutter_speed

    if plot: 
        colors = plt.cm.viridis(np.linspace(0,1,4))
        ms = 10

        fig, ax = plt.subplots()
        ax.scatter(U.real, data1.real, c=colors[0], s=ms, lw=0)
        ax.scatter(U.real, data2.real, c=colors[1], s=ms, lw=0)
        ax.scatter(U.real, data3.real, c=colors[2], s=ms, lw=0)
        ax.scatter(U.real, data4.real, c=colors[3], s=ms, lw=0)
        ax.axhline(0, ls="-", c="k")
        ax.axvline(flutter_speed, ls="--", c='r')
        ax.set_ylabel(r'$\xi$', fontsize=15, rotation="horizontal", ha='right')
        ax.set_xlabel(r'$\bar{U}$', fontsize=15)
        ax.set_title(r'$\frac{\omega_h}{\omega_\alpha}=%0.1f$'%omega, va="bottom", fontsize=20)
        ax.set_ylim(-1,1)

        fig, ax = plt.subplots()
        ax.scatter(U.real, data1.imag, c=colors[0], s=ms, lw=0)
        ax.scatter(U.real, data2.imag, c=colors[1], s=ms, lw=0)
        ax.scatter(U.real, data3.imag, c=colors[2], s=ms, lw=0)
        ax.scatter(U.real, data4.imag, c=colors[3], s=ms, lw=0)
        ax.axvline(flutter_speed, ls="--", c='r')

        ax.set_ylabel(r'$\omega$', fontsize=15, rotation="horizontal", ha='right')
        ax.set_xlabel(r'$\bar{U}$', fontsize=15)
        ax.set_title(r'$\frac{\omega_h}{\omega_\alpha}=%0.1f$'%omega, va="bottom", fontsize=20)
        plt.show()

    return flutter_freq, flutter_speed


compute_flutter(.2, True)
print 
compute_flutter(.5, True)
print 
compute_flutter(.8, True)
